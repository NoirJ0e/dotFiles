# This is a demo config to showcase some of the most important commands.
# It is meant to be changed and configured, as it is intentionally kept sparse.
# For a (much) more advanced configuration example see my dotfiles:
# https://github.com/FelixKratz/dotfiles

PLUGIN_DIR="$CONFIG_DIR/plugins"

##### Bar Appearance #####
# Configuring the general appearance of the bar.
# These are only some of the options available. For all options see:
# https://felixkratz.github.io/SketchyBar/config/bar
# If you are looking for other colors, see the color picker:
# https://felixkratz.github.io/SketchyBar/config/tricks#color-picker

sketchybar --bar position=top height=40 blur_radius=30 color=0x40000000

##### Changing Defaults #####
# We now change some default values, which are applied to all further items.
# For a full list of all available item properties see:
# https://felixkratz.github.io/SketchyBar/config/items

default=(
  padding_left=5
  padding_right=5
  icon.font="ZedMono Nerd Font Mono:Bold:17.0"
  label.font="ZedMono Nerd Font Mono:Bold:14.0"
  icon.color=0xffffffff
  label.color=0xffffffff
  icon.padding_left=4
  icon.padding_right=4
  label.padding_left=4
  label.padding_right=4
)
sketchybar --default "${default[@]}"

##### Adding Mission Control Space Indicators #####
# Let's add some mission control spaces:
# https://felixkratz.github.io/SketchyBar/config/components#space----associate-mission-control-spaces-with-an-item
# to indicate active and available mission control spaces.

# SPACE_ICONS=("1" "2" "3" "4" "5" "6" "7" "8" "9" "10")
# for i in "${!SPACE_ICONS[@]}"
# do
#   sid="$(($i+1))"
#   space=(
#     space="$sid"
#     icon="${SPACE_ICONS[i]}"
#     icon.padding_left=7
#     icon.padding_right=7
#     background.color=0x40ffffff
#     background.corner_radius=5
#     background.height=25
#     label.drawing=off
#     script="$PLUGIN_DIR/space.sh"
#     click_script="yabai -m space --focus $sid"
#   )
#   sketchybar --add space space."$sid" left --set space."$sid" "${space[@]}"
# done

##### Adding Left Items #####
# We add some regular items to the left side of the bar, where
# only the properties deviating from the current defaults need to be set

# sketchybar --add item chevron left \
#            --set chevron icon= label.drawing=off \
#            --add item front_app left \
#            --set front_app icon.drawing=off script="$PLUGIN_DIR/front_app.sh" \
#            --subscribe front_app front_app_switched

##### Adding Right Items #####
# In the same way as the left items we can add items to the right side.
# Additional position (e.g. center) are available, see:
# https://felixkratz.github.io/SketchyBar/config/items#adding-items-to-sketchybar

# Some items refresh on a fixed cycle, e.g. the clock runs its script once
# every 10s. Other items respond to events they subscribe to, e.g. the
# volume.sh script is only executed once an actual change in system audio
# volume is registered. More info about the event system can be found here:
# https://felixkratz.github.io/SketchyBar/config/events

sketchybar --add item clock right \
           --set clock update_freq=10 icon=  script="$PLUGIN_DIR/clock.sh" \
           --add item volume right \
           --set volume script="$PLUGIN_DIR/volume.sh" \
           --subscribe volume volume_change \
           --add item battery right \
           --set battery update_freq=120 script="$PLUGIN_DIR/battery.sh" \
           --subscribe battery system_woke power_source_change

# AeroSpace
#!/usr/bin/env bash


# 0. 找出 aerospace 的完整路径 (在终端执行 which aerospace)
AEROSPACE_CMD_PATH=$(which aerospace) # 例如 /opt/homebrew/bin/aerospace

# 1. 定义你想要的工作区名称和顺序，并映射到对应的 Nerd Font 图标
WORKSPACE_ICONS=(
    ["Browser"]=""  # 使用 Nerd Font 图标代表 Browser
    ["Todos"]=""    # 使用 Nerd Font 图标代表 Todos
    ["Communications"]=""  # 使用 Nerd Font 图标代表 Communications
    ["Codes"]=""    # 使用 Nerd Font 图标代表 Codes
    ["AIs"]="V"      # 使用 Nerd Font 图标代表 AIs
    ["Tools"]=""    # 使用 Nerd Font 图标代表 Tools
    ["7"]="7"        # 直接显示数字
    ["8"]="8"        # 直接显示数字
    ["9"]="9"        # 直接显示数字
)

DESIRED_WORKSPACES=(
    "Browser"
    "Todos"
    "Communications"
    "Codes"
    "AIs"
    "Tools"
    "7"
    "8"
    "9"
)


# 2. 添加 Aerospace 事件监听
sketchybar --add event aerospace_workspace_change

# 3. 循环遍历你定义的顺序来添加 SketchyBar 项目
for sid in "${DESIRED_WORKSPACES[@]}"; do
    if $AEROSPACE_CMD_PATH list-workspaces --all | grep -q "^${sid}$"; then
        case "$sid" in
            "Browser")
                ICON=""
                ;;
            "Todos")
                ICON=""
                ;;
            "Communications")
                ICON=""
                ;;
            "Codes")
                ICON=""
                ;;
            "AIs")
                ICON=""
                ;;
            "Tools")
                ICON=""
                ;;
            *)
                ICON="$sid"
                ;;
        esac
        echo "Processing workspace: $sid, Icon: $ICON"
        sketchybar --add item space.$sid left \
                   --subscribe space.$sid aerospace_workspace_change \
                   --set space.$sid \
                       background.color=0x44ffffff \
                       background.corner_radius=5 \
                       background.height=20 \
                       background.drawing=off \
                       label="$ICON" \
                       label.font="ZedMono Nerd Font:Regular:12.0" \
                       click_script="$AEROSPACE_CMD_PATH workspace $sid" \
                       script="$PLUGIN_DIR/aerospace.sh $sid"
    else
        echo "Workspace $sid not found in Aerospace workspaces."
    fi
done


# 3. 循环遍历你定义的顺序来添加 SketchyBar 项目
# for sid in "${DESIRED_WORKSPACES[@]}"; do
#     if $AEROSPACE_CMD_PATH list-workspaces --all | grep -q "^${sid}$"; then
#         sketchybar --add item space.$sid left \
#                    --subscribe space.$sid aerospace_workspace_change \
#                    --set space.$sid \
#                        background.color=0x44ffffff \
#                        background.corner_radius=5 \
#                        background.height=20 \
#                        background.drawing=off \
#                        label="${WORKSPACE_ICONS[$sid]}" \
#                        click_script="$AEROSPACE_CMD_PATH workspace $sid" \
#                        script="$PLUGIN_DIR/aerospace.sh $sid"
#     fi
# done


# # 0. 找出 aerospace 的完整路径 (在终端执行 which aerospace)
# AEROSPACE_CMD_PATH=$(which aerospace) # 例如 /opt/homebrew/bin/aerospace
#
# # 1. 定义你想要的 工作区名称 和 顺序
# DESIRED_WORKSPACES=(
#     "Browser"
#     "Todos"
#     "Communications"
#     "Codes"
#     "AIs"
#     "Tools"
#     "7"
#     "8"
#     "9"
# )
# # 2. 添加 Aerospace 事件监听
# sketchybar --add event aerospace_workspace_change
#
# # 3. 循环遍历你定义的顺序来添加 SketchyBar 项目
# for sid in "${DESIRED_WORKSPACES[@]}"; do
#     if $AEROSPACE_CMD_PATH list-workspaces --all | grep -q "^${sid}$"; then
#         sketchybar --add item space.$sid left \
#                    --subscribe space.$sid aerospace_workspace_change \
#                    --set space.$sid \
#                        background.color=0x44ffffff \
#                        background.corner_radius=5 \
#                        background.height=20 \
#                        background.drawing=off \
#                        label="$sid" \
#                        click_script="$AEROSPACE_CMD_PATH workspace $sid" \
#                        script="$PLUGIN_DIR/aerospace.sh $sid"
#     fi
# done

##### Force all scripts to run the first time (never do this in a script) #####
sketchybar --update
